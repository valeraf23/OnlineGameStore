// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineGameStore.Data.Data;

namespace OnlineGameStore.Migrations
{
    [DbContext(typeof(OnlineGameContext))]
    [Migration("20190329141913_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<int>("GameId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ParentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("PublisherId");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.GameGenre", b =>
                {
                    b.Property<int>("GameId");

                    b.Property<int>("GenreId");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.GamePlatformType", b =>
                {
                    b.Property<int>("GameId");

                    b.Property<int>("PlatformTypeId");

                    b.HasKey("GameId", "PlatformTypeId");

                    b.HasIndex("PlatformTypeId");

                    b.ToTable("GamePlatformType");
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Misc"
                        },
                        new
                        {
                            Id = 7,
                            Name = "PuzzleSkill"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Races"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 15,
                            Name = "FPS",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 16,
                            Name = "TPS",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "rally",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "arcade",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "formula",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 14,
                            Name = "off-road",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 9,
                            Name = "RTS",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "TBS",
                            ParentId = 1
                        });
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.PlatformType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique()
                        .HasFilter("[Type] IS NOT NULL");

                    b.ToTable("PlatformTypes");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Type = "Browser"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Console"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = 1,
                            Type = "Mobile"
                        });
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.Comment", b =>
                {
                    b.HasOne("OnlineGameStore.Domain.Entities.Game", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineGameStore.Domain.Entities.Comment", "ParentComment")
                        .WithMany("Answers")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.Game", b =>
                {
                    b.HasOne("OnlineGameStore.Domain.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.GameGenre", b =>
                {
                    b.HasOne("OnlineGameStore.Domain.Entities.Game", "Game")
                        .WithMany("GameGenre")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineGameStore.Domain.Entities.Genre", "Genre")
                        .WithMany("GameGenre")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.GamePlatformType", b =>
                {
                    b.HasOne("OnlineGameStore.Domain.Entities.Game", "Game")
                        .WithMany("GamePlatformType")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineGameStore.Domain.Entities.PlatformType", "PlatformType")
                        .WithMany("GamePlatformType")
                        .HasForeignKey("PlatformTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineGameStore.Domain.Entities.Genre", b =>
                {
                    b.HasOne("OnlineGameStore.Domain.Entities.Genre", "ParentGenre")
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
